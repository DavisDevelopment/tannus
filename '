package tannus.io;

import tannus.utils.Pointer;
import tannus.utils.Setter;
import tannus.utils.tupes.TwoTuple;

abstract Ptr <T> (TwoTuple<Pointer<T>, Setter<T>) {
	
	public inline function new(gtr:Pointer<T>, str:Setter<T>):Void {
		this = new TwoTuple(gtr, str);
	}

	public var v(get, set):T;
	private inline function get_v():T {
		return this.one.get();
	}
	private inline function set_v(val : T):T {
		return this.two.set(val);
	}

	@:op(A &= B)
	public inline function setValue(val : T):Void {
		this.two.set(val);
	}

	@:op(A &= B)
	public inline function setPointer(val : Pointer<T>):Void {
		this.two.set(val.get());
	}

	@:op(A &= B)
	public inline function setPtr(val : Ptr<T>):Void {
		this.two.set(val.v);
	}
}
